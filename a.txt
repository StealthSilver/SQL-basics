MySQL -> Database
SQL -> language to communicate with the Database

Database is a collection of data in a format that can be easily accessed 

why db ?
1. can store large data 
2. features like security, scalability
3. easier to insert, update or delete data 

DBMS -> database management system is a layer over the data which organizes the data 

SQL DB v/s NoSQL DB

SQL : relational db (data is stored in tables)

e.g. MySQL, Oracle, PostgreSQL etc. 

NoSQL : non relational DB (data stored in document / key - val / graph etc.)
e.g. MongoDB , Cassandra, Neo$j etc. 

SQL -> structured query language 

SQL is a programming language used to interact with the relational databases 

the database can contain numerous tables 
these tables are interrelated 

the schema is the design of the table, they are captured by the columns 
rows in SQL is called tuple, they capture the data for respective id 

SQL commands 
these are the basic commands for SQL

CREATE DATABASE db_name ;
DROP DATABASE db_name ;
USE db_name;

SQL is case insensitive

to use the db -> USE 
to create tables :

CREATE table table_name (
    column_name1 datatype constrain
    column_name2 datatype constrain
    column_name3 datatype constrain
    column_name4 datatype constrain)

CREATE DATABASE db_name 
CREATE DATABASE IF NOT EXISTS db_name 

DROP DATABASE db_name 
DROP DATABASE IF EXISTS db_name 

SHOW DATABASES
SHOW TABLES 

DATA TYPES 

CHAR 
VARCHAR
BLOB
INT 
TINYINT
BIGINT
BIT 
FLOAT
DOUBLE 
BOOLEAN 
DATE 
YEAR


CONSTRAINTS 
rules for the data in the table 

NOT NULL -> columns cannot have a null value 
UNIQUE -> all values in column are different
DEFAULT -> sets the default value of the column 
CHECK -> it can limit the values allowed in the column 


PRIMARY KEY : makes a column unique and not null but used only once. It is a clumn (or a set of columns) in a table that uniquely identifies each row. (a unique id)
There is only one PK and it should be NOT null.

FOREIGN KEY : prevents actions that would destroy links between tables. It is a column (or set of columns) in a table that refers to the primary key in another table
FKs can have duplicate and null values. There can be multiple FKs 


we can create ER (entity relation) diagrams in the reverse engineer section

to cerate a new db and table 

CREATE DATABASE instagram;

SHOW DATABASES;

USE instagram;

SHOW TABLES; 

CREATE TABLE user (
id INT,
age INT,
name VARCHAR(30) NOT NULL,
email VARCHAR(50) UNIQUE,
followers INT DEFAULT 0,
following INT,
CONSTRAINT CHECK (age >= 13),
PRIMARY KEY (id)
);

CREATE TABLE post (
id INT PRIMARY KEY,
content VARCHAR(100),
user_id INT,
FOREIGN KEY (user_id) REFERENCES user(id)
); 